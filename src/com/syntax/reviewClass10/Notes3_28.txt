OPPs is more efficient, more secure, and takes less time and memory.

Inheritance in Java:
-This is a mechanism in Java through which one class can acquire the properties
and methods from another class. The class from which we acquire the properties is called
the Parent class/Super class/Base class, and the class which acquires the properties and
methods is called the Child class/Sub class/Derived class.

Advantages of inheritance:
-Code duplication is reduced
-Saves memory
-Execution time is less

Disadvantages of inheritance:
-Classes get tightly coupled. If we change something in the parent class, it will
affect all the children classes, and we have to make sure that this new change is
compatible with the code that we have in the children classes.

When we should use inheritance:
-If there is a case in which we would have to use the same methods in many classes,
best practice would be to create a parent class and use it to extend the methods into
the subclasses.
-Example: Cat class and Dog class should both have 1 parent class called Pets

4 Types of Inheritance:
-Single:
    -Only 1 parent class and only 1 child class.
-MultiLevel:
    -If we have 1 parent class and 1 child class, and many intermediate classes.
    -Like a singular string of 1 super class and many subclasses, each inheriting from
    the previous subclass.
-Hierarchical:
    -Only 1 parent class and multiple children classes.
    -For example, the Object Class in JDK.
-Multiple:
    -Only 1 child class and multiple parent classes.
    -CANNOT be done with classes, only with Interfaces.
    -Example:

        interface Display{
            int resolution;
        }

        interface Keyboard{
            int noOfKeys;
        }

        interface lapTop extends Display, Keyboard{
        }


Rules of inheritance:
-Private members are not inherited (private fields and private methods).
-Constructors don't participate in inheritance.
-If we have a constructor in the parent class, we must have a matching constructor
in the children classes as well.
-In Java, a subclass can only extend 1 single parent class.


super Keyword:
-Used to refer to the immediate parent class's fields or methods or constructors.
-super() with parenthesis refers to the immediate parent class's constructor.

Uses of super keyword:
-If we have same named fields in the parent class and in the child class,
we can use super keyword to refer to the parent class's field, as by default
Java prefers the instance field of the child class.
-We can use the super keyword to call the method of the parent class, if we have
same named methods in the parent and the child class.
-We can use super() with parenthesis to call and access the immediate parent class's constructor.


Method Overloading:
-When a same named method exists more than once in ONE CLASS,
but with a different number of parameters, OR with different types of parameters,
OR the sequence of parameters is different.

Benefits of method overloading:
-code is more readable
-code is easier to use
-flexible code
-we can have polymorphism with the help of method overloading

When to overload a method:
-If methods are performing same operations, but with different parameters, then we should
overload these methods.

Rules:
-Method name should be same
-Method "signature" (method name + list of parameters) should be different
-We CAN'T overload a method by JUST changing its return type
-We CAN'T overload a method by JUST changing its access modifiers (public, private, etc.)
-We CAN'T overload a method by JUST changing its non-access modifiers (static, final, etc.)
-We CAN ONLY overload a method by changing its method signature by changing its parameter list.
-We CAN overload static methods, but it's not overloading if the ONLY DIFFERENCE is "static"
-We CAN overload Main method, BUT the Java will only ever call the ORIGINAL main method
